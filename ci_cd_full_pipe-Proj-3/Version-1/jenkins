@Library('my-shared-lib') _

pipeline {
	agent {
		docker {
			image 'kamalsai33/maven-docker-agt:v1'
			args '--user root -v /var/run/docker.sock:/var/run/docker.sock' //mount docker socket to access the hosts docker daemon
	 	 }
  	}
	environment {
		DOCKER_IMAGE = "kamalsai33/ultimate-cicd:${BUILD_NUMBER}"
		}
	
	stages {
		stage('checkout') {
			steps {
		   		sh 'echo passed'
			}
	  	}
		stage('Build and Test') {
			steps {
				sh '''
				    ls -ltr
				    cd ci_cd_full_pipe-Proj-3/Version-1 && mvn clean package
				  '''
			}
		}

		stage('static code analysis') {
			environment {
				SONAR_URL = "http://192.168.146.132:9000"
			}
			steps {
				withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          			sh 'cd ci_cd_full_pipe-Proj-3/Version-1 && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        			}
			}
		}
		stage('build and push docker image') {
			environment {
				DOCKERFILE_LOCATION = "ci_cd_full_pipe-Proj-3/Version-1/dockerfile"
				REGISTRY_CREDENTIALS = credentials('docker-crd')
			}
			steps {
				script {
					sh 'cd ci_cd_full_pipe-Proj-3/Version-1 && docker build -t ${DOCKER_IMAGE} .'
					def dockerImage = docker.image("${DOCKER_IMAGE}")
					docker.withRegistry('https://index.docker.io/v1/', "docker-crd") {
					dockerImage.push()
					}
				}
			}
		}
		stage('updating deployment file') {
			environment {
				GIT_REPO_NAME="Mark-10-Kubernet_repo"
				GIT_USER_NAME="saikamal33"
				GIT_DEST_REPO="https://github.com/saikamal33/Mark-10-Kubernet_repo"
				GIT_DEST_DEPLOYMENT="kube-Mark-10.3/deployment.yml"
			}
			steps {
            			withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
				sh '''
				    ls -l
				    git clone ${GIT_DEST_REPO}
				    cd Mark-10-Kubernet_repo
		                    git config user.email "kamaleshsai33@gmail.com"
		                    git config user.name "saikamal33"
		                    sed -i "s|image: .*$|image: ${DOCKER_IMAGE}|" kube-Mark-10.3/deployment.yml
		                    git add kube-Mark-10.3/deployment.yml
		                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
		                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
		                '''
            			}
			}
		}
	}
	post {
   	 	always {
        		cleanWs()  // This will remove the entire workspace at the end of the build
	 		
		}
	}
}

